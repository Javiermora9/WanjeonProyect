"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.PushStream = void 0;

var _readableStream = _interopRequireDefault(require("readable-stream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var PushStream =
/*#__PURE__*/
function (_Readable) {
  _inherits(PushStream, _Readable);

  function PushStream(init) {
    var _this;

    _classCallCheck(this, PushStream);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PushStream).call(this));
    _this._next = _this._next.bind(_assertThisInitialized(_this));
    init(_this._next);
    return _this;
  }

  _createClass(PushStream, [{
    key: "_next",
    value: function _next(err, data) {
      if (this._destroyed) return;
      if (err) return this.destroy(err);
      if (data === null) return this.push(null);
      this._reading = false;
      this.push(data);
    }
  }, {
    key: "_read",
    value: function _read(size) {}
  }, {
    key: "destroy",
    value: function destroy(err) {
      var _this2 = this;

      if (this._destroyed) return;
      this._destroyed = true;
      setTimeout(function () {
        if (err) _this2.emit('error', err);

        _this2.emit('close');
      });
    }
  }]);

  return PushStream;
}(_readableStream["default"]);

exports.PushStream = PushStream;
var _default = PushStream;
exports["default"] = _default;